import {
  IconBase_default
} from "./chunk-72OAKZNY.js";
import {
  SvelteComponentDev,
  add_location,
  assign,
  attr_dev,
  children,
  claim_component,
  claim_svg_element,
  create_component,
  destroy_component,
  detach_dev,
  dispatch_dev,
  exclude_internal_props,
  get_spread_object,
  get_spread_update,
  init,
  insert_hydration_dev,
  mount_component,
  noop,
  safe_not_equal,
  svg_element,
  transition_in,
  transition_out,
  validate_slots
} from "./chunk-3XCKNI7N.js";
import "./chunk-SA3VOP2B.js";
import "./chunk-EKIRE5YT.js";
import "./chunk-V6TY7KAL.js";

// node_modules/svelte-icons/fa/FaEnvelope.svelte
var file = "node_modules/svelte-icons/fa/FaEnvelope.svelte";
function create_default_slot(ctx) {
  let path;
  const block = {
    c: function create() {
      path = svg_element("path");
      this.h();
    },
    l: function claim(nodes) {
      path = claim_svg_element(nodes, "path", { d: true });
      children(path).forEach(detach_dev);
      this.h();
    },
    h: function hydrate() {
      attr_dev(path, "d", "M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z");
      add_location(path, file, 4, 10, 153);
    },
    m: function mount(target, anchor) {
      insert_hydration_dev(target, path, anchor);
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(path);
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot.name,
    type: "slot",
    source: '(4:8) <IconBase viewBox=\\"0 0 512 512\\" {...$$props}>',
    ctx
  });
  return block;
}
function create_fragment(ctx) {
  let iconbase;
  let current;
  const iconbase_spread_levels = [
    { viewBox: "0 0 512 512" },
    /*$$props*/
    ctx[0]
  ];
  let iconbase_props = {
    $$slots: { default: [create_default_slot] },
    $$scope: { ctx }
  };
  for (let i = 0; i < iconbase_spread_levels.length; i += 1) {
    iconbase_props = assign(iconbase_props, iconbase_spread_levels[i]);
  }
  iconbase = new IconBase_default({ props: iconbase_props, $$inline: true });
  const block = {
    c: function create() {
      create_component(iconbase.$$.fragment);
    },
    l: function claim(nodes) {
      claim_component(iconbase.$$.fragment, nodes);
    },
    m: function mount(target, anchor) {
      mount_component(iconbase, target, anchor);
      current = true;
    },
    p: function update(ctx2, [dirty]) {
      const iconbase_changes = dirty & /*$$props*/
      1 ? get_spread_update(iconbase_spread_levels, [iconbase_spread_levels[0], get_spread_object(
        /*$$props*/
        ctx2[0]
      )]) : {};
      if (dirty & /*$$scope*/
      2) {
        iconbase_changes.$$scope = { dirty, ctx: ctx2 };
      }
      iconbase.$set(iconbase_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(iconbase.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(iconbase.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(iconbase, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("FaEnvelope", slots, []);
  $$self.$$set = ($$new_props) => {
    $$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
  };
  $$self.$capture_state = () => ({ IconBase: IconBase_default });
  $$self.$inject_state = ($$new_props) => {
    $$invalidate(0, $$props = assign(assign({}, $$props), $$new_props));
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$props = exclude_internal_props($$props);
  return [$$props];
}
var FaEnvelope = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "FaEnvelope",
      options,
      id: create_fragment.name
    });
  }
};
var FaEnvelope_default = FaEnvelope;
export {
  FaEnvelope_default as default
};
//# sourceMappingURL=svelte-icons_fa_FaEnvelope__svelte.js.map
