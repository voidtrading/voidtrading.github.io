import {
  IconBase_default
} from "./chunk-72OAKZNY.js";
import {
  SvelteComponentDev,
  add_location,
  assign,
  attr_dev,
  children,
  claim_component,
  claim_svg_element,
  create_component,
  destroy_component,
  detach_dev,
  dispatch_dev,
  exclude_internal_props,
  get_spread_object,
  get_spread_update,
  init,
  insert_hydration_dev,
  mount_component,
  noop,
  safe_not_equal,
  svg_element,
  transition_in,
  transition_out,
  validate_slots
} from "./chunk-3XCKNI7N.js";
import "./chunk-SA3VOP2B.js";
import "./chunk-EKIRE5YT.js";
import "./chunk-V6TY7KAL.js";

// node_modules/svelte-icons/fa/FaLinkedin.svelte
var file = "node_modules/svelte-icons/fa/FaLinkedin.svelte";
function create_default_slot(ctx) {
  let path;
  const block = {
    c: function create() {
      path = svg_element("path");
      this.h();
    },
    l: function claim(nodes) {
      path = claim_svg_element(nodes, "path", { d: true });
      children(path).forEach(detach_dev);
      this.h();
    },
    h: function hydrate() {
      attr_dev(path, "d", "M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z");
      add_location(path, file, 4, 10, 153);
    },
    m: function mount(target, anchor) {
      insert_hydration_dev(target, path, anchor);
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(path);
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot.name,
    type: "slot",
    source: '(4:8) <IconBase viewBox=\\"0 0 448 512\\" {...$$props}>',
    ctx
  });
  return block;
}
function create_fragment(ctx) {
  let iconbase;
  let current;
  const iconbase_spread_levels = [
    { viewBox: "0 0 448 512" },
    /*$$props*/
    ctx[0]
  ];
  let iconbase_props = {
    $$slots: { default: [create_default_slot] },
    $$scope: { ctx }
  };
  for (let i = 0; i < iconbase_spread_levels.length; i += 1) {
    iconbase_props = assign(iconbase_props, iconbase_spread_levels[i]);
  }
  iconbase = new IconBase_default({ props: iconbase_props, $$inline: true });
  const block = {
    c: function create() {
      create_component(iconbase.$$.fragment);
    },
    l: function claim(nodes) {
      claim_component(iconbase.$$.fragment, nodes);
    },
    m: function mount(target, anchor) {
      mount_component(iconbase, target, anchor);
      current = true;
    },
    p: function update(ctx2, [dirty]) {
      const iconbase_changes = dirty & /*$$props*/
      1 ? get_spread_update(iconbase_spread_levels, [iconbase_spread_levels[0], get_spread_object(
        /*$$props*/
        ctx2[0]
      )]) : {};
      if (dirty & /*$$scope*/
      2) {
        iconbase_changes.$$scope = { dirty, ctx: ctx2 };
      }
      iconbase.$set(iconbase_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(iconbase.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(iconbase.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(iconbase, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("FaLinkedin", slots, []);
  $$self.$$set = ($$new_props) => {
    $$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
  };
  $$self.$capture_state = () => ({ IconBase: IconBase_default });
  $$self.$inject_state = ($$new_props) => {
    $$invalidate(0, $$props = assign(assign({}, $$props), $$new_props));
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$props = exclude_internal_props($$props);
  return [$$props];
}
var FaLinkedin = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "FaLinkedin",
      options,
      id: create_fragment.name
    });
  }
};
var FaLinkedin_default = FaLinkedin;
export {
  FaLinkedin_default as default
};
//# sourceMappingURL=svelte-icons_fa_FaLinkedin__svelte.js.map
